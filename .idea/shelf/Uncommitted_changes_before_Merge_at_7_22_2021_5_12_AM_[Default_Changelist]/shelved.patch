Index: app/src/main/res/layout/activity_edit_questions.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".EditQuestionActivity\"\r\n    android:background=\"@color/colorPrimaryDark\">\r\n\r\n\r\n        <androidx.viewpager2.widget.ViewPager2\r\n            android:id=\"@+id/singleQ\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_centerVertical=\"true\"\r\n            tools:layout_editor_absoluteX=\"1dp\"\r\n            tools:layout_editor_absoluteY=\"1dp\">\r\n\r\n        </androidx.viewpager2.widget.ViewPager2>\r\n\r\n\r\n\r\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n        android:id=\"@+id/floating_action_button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_margin=\"10dp\"\r\n        app:tint=\"@android:color/black\"\r\n        android:backgroundTint=\"@color/textColor\"\r\n        app:srcCompat=\"@drawable/plus_icon\"\r\n        android:onClick=\"newQuestion\"/>\r\n\r\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n        android:id=\"@+id/floating_home_button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentLeft=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_margin=\"10dp\"\r\n        app:tint=\"@android:color/black\"\r\n        android:backgroundTint=\"@color/textColor\"\r\n        android:src=\"@drawable/ic_baseline_home_24\"\r\n        />\r\n\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_edit_questions.xml	(revision 79692ff92d16aca19e016372e7d04b3fdcbe85a2)
+++ app/src/main/res/layout/activity_edit_questions.xml	(date 1626864311039)
@@ -9,7 +9,18 @@
     android:background="@color/colorPrimaryDark">
 
 
-        <androidx.viewpager2.widget.ViewPager2
+    <TextView
+        android:id="@+id/blank_text"
+        android:layout_height="wrap_content"
+        android:layout_width="wrap_content"
+        android:layout_marginTop="30dp"
+        android:textSize="20sp"
+        android:textColor="@color/primaryTextColor"
+        android:layout_centerHorizontal="true"
+        android:text="This Quiz has no created problems"
+       android:visibility="gone"/>
+
+    <androidx.viewpager2.widget.ViewPager2
             android:id="@+id/singleQ"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
Index: app/src/main/java/com/example/quizme/PastQuizQuestionActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quizme;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.SharedPreferences;\r\nimport android.net.ConnectivityManager;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.DefaultItemAnimator;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport com.example.quizme.adapters.PastQuizAdaptor;\r\nimport com.example.quizme.utility.NetworkChangeListener;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\nimport okhttp3.MediaType;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\npublic class  PastQuizQuestionActivity extends AppCompatActivity {\r\n\r\n    PastQuizAdaptor adapter;\r\n    ViewPager2 viewPager2;\r\n    NetworkChangeListener networkChangeListener = new NetworkChangeListener();\r\n    String quizProblems,providedAns;\r\n    JSONArray problems,ans;\r\n    String mongoID;\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        IntentFilter filter = new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION);\r\n        registerReceiver(networkChangeListener, filter);\r\n\r\n        super.onStart();\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        unregisterReceiver(networkChangeListener);\r\n\r\n        super.onStop();\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.past_question_activity);\r\n\r\n        Intent intent = getIntent();\r\n        quizProblems = intent.getExtras().getString(\"problems\");\r\n        providedAns = intent.getExtras().getString(\"providedAns\");\r\n\r\n        try {\r\n            problems = new JSONArray(quizProblems);\r\n            ans = new JSONArray(providedAns);\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        viewPager2 = findViewById(R.id.singleQ);\r\n\r\n        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {\r\n            @Override\r\n            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\r\n                super.onPageScrolled(position, positionOffset, positionOffsetPixels);\r\n            }\r\n\r\n            @Override\r\n            public void onPageSelected(int position) {\r\n                super.onPageSelected(position);\r\n            }\r\n\r\n            @Override\r\n            public void onPageScrollStateChanged(int state) {\r\n                super.onPageScrollStateChanged(state);\r\n            }\r\n        });\r\n\r\n        adapter = new PastQuizAdaptor(problems,this,ans);\r\n\r\n        viewPager2.setAdapter(adapter);\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/quizme/PastQuizQuestionActivity.java	(revision 79692ff92d16aca19e016372e7d04b3fdcbe85a2)
+++ app/src/main/java/com/example/quizme/PastQuizQuestionActivity.java	(date 1626875911868)
@@ -9,6 +9,7 @@
 import android.os.Bundle;
 import android.util.Log;
 import android.view.View;
+import android.widget.TextView;
 import android.widget.Toast;
 
 import androidx.appcompat.app.AppCompatActivity;
@@ -40,6 +41,7 @@
     String quizProblems,providedAns;
     JSONArray problems,ans;
     String mongoID;
+    TextView blankText;
 
     @Override
     protected void onStart() {
@@ -90,11 +92,14 @@
                 super.onPageScrollStateChanged(state);
             }
         });
-
+        blankText = findViewById(R.id.blank_text);
+        if(problems.length()==0){
+            blankText.setVisibility(blankText.VISIBLE);
+        }
         adapter = new PastQuizAdaptor(problems,this,ans);
-
         viewPager2.setAdapter(adapter);
 
+
     }
 
 }
Index: app/src/main/java/com/example/quizme/adapters/PastQuizAdaptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quizme.adapters;\r\n\r\nimport android.app.Activity;\r\nimport android.content.ClipData;\r\nimport android.content.ClipboardManager;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Handler;\r\nimport android.os.Looper;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.IOException;\r\n\r\nimport com.example.quizme.EditQuestion;\r\nimport com.example.quizme.R;\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport okhttp3.MediaType;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\n\r\npublic class PastQuizAdaptor extends RecyclerView.Adapter<PastQuizAdaptor.ViewHolder> {\r\n\r\n\r\n    JSONArray problems,providedAns;\r\n    View view;\r\n    Context context;\r\n\r\n\r\n\r\n    public PastQuizAdaptor( JSONArray problems, Context context,JSONArray providedAns) {\r\n        this.problems = problems;\r\n        this.context = context;\r\n        this.providedAns = providedAns;\r\n    }\r\n\r\n\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n        LayoutInflater layoutInflater = LayoutInflater.from(parent.getContext());\r\n        View singleSch = layoutInflater.inflate(R.layout.past_question, parent, false);\r\n        ViewHolder viewHolder = new ViewHolder(singleSch);\r\n        return viewHolder;\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(ViewHolder holder, final int position) {\r\n\r\n        EditQuestion tmpQuestion = null;\r\n        try {\r\n            tmpQuestion = new EditQuestion(\r\n                    problems.getJSONObject(position).get(\"question\").toString(),\r\n                    problems.getJSONObject(position).getJSONArray(\"answers\").get(0).toString(),\r\n                    problems.getJSONObject(position).getJSONArray(\"answers\").get(1).toString(),\r\n                    problems.getJSONObject(position).getJSONArray(\"answers\").get(2).toString(),\r\n                    problems.getJSONObject(position).getJSONArray(\"answers\").get(3).toString(),\r\n                    (int)problems.getJSONObject(position).get(\"correctAnswer\"),\r\n                    problems.getJSONObject(position).get(\"image_url\").toString(),\r\n                    providedAns.getInt(position)\r\n\r\n            );\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        holder.questionNumber.setText(String.valueOf(tmpQuestion.getQuestionNum() + 1));\r\n        holder.question.setText(tmpQuestion.getQuestion().trim());\r\n        holder.answer1.setText(tmpQuestion.getAnswer1().trim());\r\n        holder.answer2.setText(tmpQuestion.getAnswer2().trim());\r\n        holder.answer3.setText(tmpQuestion.getAnswer3().trim());\r\n        holder.answer4.setText(tmpQuestion.getAnswer4().trim());\r\n\r\n        if(tmpQuestion.getProvidedAns()==1){\r\n            holder.answer1.setChecked(true);\r\n        }else if(tmpQuestion.getProvidedAns()==2){\r\n            holder.answer2.setChecked(true);\r\n        }else if(tmpQuestion.getProvidedAns()==3){\r\n            holder.answer3.setChecked(true);\r\n        }else if(tmpQuestion.getProvidedAns()==4){\r\n            holder.answer4.setChecked(true);\r\n        }\r\n\r\n        holder.correctAns.setText(\"Correct Answer : \"+String.valueOf(tmpQuestion.getCorrectAns()));\r\n\r\n        if(tmpQuestion.getCorrectAns() == tmpQuestion.getProvidedAns()){\r\n            holder.icon.setImageResource(R.drawable.right);\r\n        }else{\r\n            holder.icon.setImageResource(R.drawable.wrong);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return problems.length();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        public TextView questionNumber;\r\n        public TextView question,correctAns;\r\n        public ImageView quizImage;\r\n        public RadioButton answer1;\r\n        public RadioButton answer2;\r\n        public RadioButton answer3;\r\n        public RadioButton answer4;\r\n        public RadioGroup ans;\r\n        public ImageView icon;\r\n\r\n        public ViewHolder(View itemView) {\r\n            super(itemView);\r\n\r\n            view = itemView;\r\n\r\n            this.questionNumber = itemView.findViewById(R.id.quizNum);\r\n            this.question = itemView.findViewById(R.id.singleQus);\r\n            this.quizImage = itemView.findViewById(R.id.quizImage);\r\n            this.ans = itemView.findViewById(R.id.mcq);\r\n\r\n            this.answer1 = itemView.findViewById(R.id.ans1);\r\n            this.answer2 = itemView.findViewById(R.id.ans2);\r\n            this.answer3 = itemView.findViewById(R.id.ans3);\r\n            this.answer4 = itemView.findViewById(R.id.ans4);\r\n            this.correctAns = itemView.findViewById(R.id.correctAns);\r\n            this.icon = itemView.findViewById(R.id.icon);\r\n\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/quizme/adapters/PastQuizAdaptor.java	(revision 79692ff92d16aca19e016372e7d04b3fdcbe85a2)
+++ app/src/main/java/com/example/quizme/adapters/PastQuizAdaptor.java	(date 1626873922451)
@@ -75,6 +75,7 @@
         try {
             tmpQuestion = new EditQuestion(
                     problems.getJSONObject(position).get("question").toString(),
+                    position,
                     problems.getJSONObject(position).getJSONArray("answers").get(0).toString(),
                     problems.getJSONObject(position).getJSONArray("answers").get(1).toString(),
                     problems.getJSONObject(position).getJSONArray("answers").get(2).toString(),
@@ -89,6 +90,7 @@
         }
 
         holder.questionNumber.setText(String.valueOf(tmpQuestion.getQuestionNum() + 1));
+       // Log.i("number",String.valueOf(tmpQuestion.getQuestionNum() + 1));
         holder.question.setText(tmpQuestion.getQuestion().trim());
         holder.answer1.setText(tmpQuestion.getAnswer1().trim());
         holder.answer2.setText(tmpQuestion.getAnswer2().trim());
@@ -106,7 +108,7 @@
         }
 
         holder.correctAns.setText("Correct Answer : "+String.valueOf(tmpQuestion.getCorrectAns()));
-
+        Log.i("provided ans",String.valueOf(tmpQuestion.getProvidedAns()));
         if(tmpQuestion.getCorrectAns() == tmpQuestion.getProvidedAns()){
             holder.icon.setImageResource(R.drawable.right);
         }else{
@@ -121,6 +123,8 @@
         return problems.length();
     }
 
+
+
     public class ViewHolder extends RecyclerView.ViewHolder {
 
         public TextView questionNumber;
Index: app/src/main/java/com/example/quizme/EditQuestion.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quizme;\r\n\r\n\r\nimport android.net.Uri;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class EditQuestion {\r\n\r\n    private String question;\r\n    private int questionNum;\r\n    private String answer1;\r\n    private String answer2;\r\n    private String answer3;\r\n    private String answer4;\r\n    int providedAns;\r\n    private int correctAns;\r\n    private String imageUri;\r\n\r\n    public EditQuestion(String question, int questionNum, String answer1, String answer2, String answer3, String answer4, int correctAns, String imageUri) {\r\n        this.question = question;\r\n        this.questionNum = questionNum;\r\n        this.answer1 = answer1;\r\n        this.answer2 = answer2;\r\n        this.answer3 = answer3;\r\n        this.answer4 = answer4;\r\n        this.correctAns = correctAns;\r\n        this.imageUri = imageUri;\r\n    }\r\n\r\n    public EditQuestion(String question, String answer1, String answer2, String answer3, String answer4, int correctAns, String imageUri,int ans) {\r\n        this.question = question;\r\n        this.questionNum = questionNum;\r\n        this.answer1 = answer1;\r\n        this.answer2 = answer2;\r\n        this.answer3 = answer3;\r\n        this.answer4 = answer4;\r\n        this.correctAns = correctAns;\r\n        this.imageUri = imageUri;\r\n        this.providedAns = ans;\r\n    }\r\n\r\n    public int getProvidedAns() {\r\n        return providedAns;\r\n    }\r\n\r\n    public void setProvidedAns(int providedAns) {\r\n        this.providedAns = providedAns;\r\n    }\r\n\r\n    public String getQuestion() {\r\n        return question;\r\n    }\r\n\r\n    public void setQuestion(String question) {\r\n        this.question = question;\r\n    }\r\n\r\n    public int getQuestionNum() {\r\n        return questionNum;\r\n    }\r\n\r\n    public void setQuestionNum(int questionNum) {\r\n        this.questionNum = questionNum;\r\n    }\r\n\r\n    public String getAnswer1() {\r\n        return answer1;\r\n    }\r\n\r\n    public void setAnswer1(String answer1) {\r\n        this.answer1 = answer1;\r\n    }\r\n\r\n    public String getAnswer2() {\r\n        return answer2;\r\n    }\r\n\r\n    public void setAnswer2(String answer2) {\r\n        this.answer2 = answer2;\r\n    }\r\n\r\n    public String getAnswer3() {\r\n        return answer3;\r\n    }\r\n\r\n    public void setAnswer3(String answer3) {\r\n        this.answer3 = answer3;\r\n    }\r\n\r\n    public String getAnswer4() {\r\n        return answer4;\r\n    }\r\n\r\n    public void setAnswer4(String answer4) {\r\n        this.answer4 = answer4;\r\n    }\r\n\r\n    public int getCorrectAns() {\r\n        return correctAns;\r\n    }\r\n\r\n    public void setCorrectAns(int correctAns) {\r\n        this.correctAns = correctAns;\r\n    }\r\n\r\n    public String getImageUri() {\r\n        return imageUri;\r\n    }\r\n\r\n    public void setImageUri(String imageUri) {\r\n        this.imageUri = imageUri;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/quizme/EditQuestion.java	(revision 79692ff92d16aca19e016372e7d04b3fdcbe85a2)
+++ app/src/main/java/com/example/quizme/EditQuestion.java	(date 1626866721930)
@@ -17,6 +17,7 @@
     private int correctAns;
     private String imageUri;
 
+    //use in both past and edit questions
     public EditQuestion(String question, int questionNum, String answer1, String answer2, String answer3, String answer4, int correctAns, String imageUri) {
         this.question = question;
         this.questionNum = questionNum;
@@ -28,7 +29,7 @@
         this.imageUri = imageUri;
     }
 
-    public EditQuestion(String question, String answer1, String answer2, String answer3, String answer4, int correctAns, String imageUri,int ans) {
+    public EditQuestion(String question,int questionNum, String answer1, String answer2, String answer3, String answer4, int correctAns, String imageUri,int ans) {
         this.question = question;
         this.questionNum = questionNum;
         this.answer1 = answer1;
Index: app/src/main/java/com/example/quizme/EditQuestionActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quizme;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.SharedPreferences;\r\nimport android.net.ConnectivityManager;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.DefaultItemAnimator;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport com.example.quizme.utility.NetworkChangeListener;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\nimport okhttp3.MediaType;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\npublic class EditQuestionActivity extends AppCompatActivity {\r\n\r\n    EditQuestionadapter adapter;\r\n    ViewPager2 viewPager2;\r\n    NetworkChangeListener networkChangeListener = new NetworkChangeListener();\r\n    int quizID;\r\n    String mongoID;\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        IntentFilter filter = new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION);\r\n        registerReceiver(networkChangeListener, filter);\r\n\r\n        super.onStart();\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        unregisterReceiver(networkChangeListener);\r\n\r\n        super.onStop();\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_edit_questions);\r\n\r\n        Intent intent = getIntent();\r\n        quizID = intent.getExtras().getInt(\"quizID\");\r\n        WebRequest webRequest = new WebRequest(this);\r\n        webRequest.execute();\r\n\r\n\r\n        viewPager2 = findViewById(R.id.singleQ);\r\n\r\n        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {\r\n            @Override\r\n            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\r\n                super.onPageScrolled(position, positionOffset, positionOffsetPixels);\r\n            }\r\n\r\n            @Override\r\n            public void onPageSelected(int position) {\r\n                super.onPageSelected(position);\r\n            }\r\n\r\n            @Override\r\n            public void onPageScrollStateChanged(int state) {\r\n                super.onPageScrollStateChanged(state);\r\n            }\r\n        });\r\n        FloatingActionButton home = findViewById(R.id.floating_home_button);\r\n        home.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                startActivity(new Intent(getApplicationContext(),MainActivity.class));\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void newQuestion(View v) {\r\n\r\n        Intent intent = new Intent(this, NewQuestionEditActivity.class);\r\n        intent.putExtra(\"quizId\", mongoID);\r\n        this.startActivity(intent);\r\n\r\n    }\r\n\r\n\r\n    private class WebRequest extends AsyncTask<String, String, String> {\r\n\r\n        Context con;\r\n\r\n        public WebRequest(Context con) {\r\n            this.con = con;\r\n        }\r\n\r\n\r\n        @Override\r\n        protected String doInBackground(String... strings) {\r\n            SharedPreferences pref = getApplicationContext().getSharedPreferences(\"MyPreferences\", Context.MODE_PRIVATE);\r\n            String baseURL = pref.getString(\"baseURL\", null);\r\n            String url = baseURL + \"/quiz/find/created/quizzes\";\r\n\r\n            String jwt = pref.getString(\"jwt\", null);\r\n            final String token = \"Bearer \" + jwt;\r\n\r\n            OkHttpClient client = new OkHttpClient();\r\n            MediaType Json = MediaType.parse(\"application/json;charset=utf-8\");\r\n            JSONObject data = new JSONObject();\r\n            String val = \"\";\r\n\r\n            RequestBody body = RequestBody.create(data.toString(), Json);\r\n\r\n            okhttp3.Request request = new okhttp3.Request.Builder().url(\r\n                    url\r\n            ).header(\"Authorization\", token).build();\r\n\r\n\r\n            Response response = null;\r\n            String responseBody = null;\r\n\r\n\r\n            try {\r\n                response = client.newCall(request).execute();\r\n                responseBody = response.body().string();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            if (response.code() == 200) {\r\n\r\n                return responseBody;\r\n\r\n            }\r\n            return null;\r\n\r\n\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(String s) {\r\n            super.onPostExecute(s);\r\n            JSONObject json = null;\r\n            JSONArray val = null;\r\n\r\n            if(s==null){\r\n                Toast toast=Toast.makeText(con, \"Something Went Wrong Try Again Later!\", Toast.LENGTH_SHORT);\r\n                toast.show();\r\n            }\r\n\r\n            try {\r\n                json = new JSONObject(s);\r\n                val = json.getJSONArray(\"createdQuizzes\");\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n\r\n            JSONArray problems = null;\r\n            try {\r\n                problems = val.getJSONObject(quizID).getJSONArray(\"problems\");\r\n                mongoID = val.getJSONObject(quizID).getString(\"id\");\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            adapter = new EditQuestionadapter(problems, con, mongoID, quizID);\r\n\r\n            viewPager2.setAdapter(adapter);\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/quizme/EditQuestionActivity.java	(revision 79692ff92d16aca19e016372e7d04b3fdcbe85a2)
+++ app/src/main/java/com/example/quizme/EditQuestionActivity.java	(date 1626864076066)
@@ -9,6 +9,7 @@
 import android.os.Bundle;
 import android.util.Log;
 import android.view.View;
+import android.widget.TextView;
 import android.widget.Toast;
 
 import androidx.appcompat.app.AppCompatActivity;
@@ -38,6 +39,7 @@
     NetworkChangeListener networkChangeListener = new NetworkChangeListener();
     int quizID;
     String mongoID;
+    TextView blankText;
 
     @Override
     protected void onStart() {
@@ -179,6 +181,12 @@
                 e.printStackTrace();
             }
 
+            blankText = findViewById(R.id.blank_text);
+
+            if(problems.length()==0){
+                blankText.setVisibility(blankText.VISIBLE);
+            }
+
             adapter = new EditQuestionadapter(problems, con, mongoID, quizID);
 
             viewPager2.setAdapter(adapter);
Index: app/src/main/java/com/example/quizme/QuizListAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quizme;\r\n\r\nimport android.app.Activity;\r\nimport android.content.ClipData;\r\nimport android.content.ClipboardManager;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Handler;\r\nimport android.os.Looper;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.IOException;\r\n\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\n\r\nimport java.text.DateFormat;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\nimport okhttp3.MediaType;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\n\r\npublic class QuizListAdapter extends RecyclerView.Adapter<QuizListAdapter.ViewHolder> {\r\n\r\n\r\n    ArrayList<Question> questions;\r\n    View view;\r\n    int status;\r\n    Context context;\r\n\r\n\r\n    public QuizListAdapter(ArrayList<Question> questions, int status, Context context) {\r\n        this.questions = questions;\r\n        this.status = status;\r\n        this.context = context;\r\n    }\r\n\r\n\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n        LayoutInflater layoutInflater = LayoutInflater.from(parent.getContext());\r\n        View singleSch = layoutInflater.inflate(R.layout.single_question, parent, false);\r\n        ViewHolder viewHolder = new ViewHolder(singleSch);\r\n        return viewHolder;\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(ViewHolder holder, final int position) {\r\n\r\n        Question tmpQuestion = this.questions.get(position);\r\n\r\n        holder.questionNumber.setText(String.valueOf(tmpQuestion.getQuestionNum() + 1));\r\n        holder.question.setText(tmpQuestion.getQuestion().trim());\r\n        if (tmpQuestion.getImageUri() != null) {\r\n\r\n            holder.quizImage.setVisibility(View.VISIBLE);\r\n            holder.quizImage.setImageURI(tmpQuestion.getImageUri());\r\n        }\r\n\r\n        holder.answer1.setText(tmpQuestion.getAnswer1().trim());\r\n        holder.answer2.setText(tmpQuestion.getAnswer2().trim());\r\n        holder.answer3.setText(tmpQuestion.getAnswer3().trim());\r\n        holder.answer4.setText(tmpQuestion.getAnswer4().trim());\r\n\r\n        if (status == 1) {\r\n            holder.deleteQuestion.setVisibility(View.GONE);\r\n            holder.modifyQuestion.setVisibility(View.GONE);\r\n\r\n            if (position == (GlobalData.getLengthClient() - 1)) {\r\n                holder.finishQuiz.setVisibility(View.VISIBLE);\r\n                holder.finishQuiz.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(final View view){\r\n\r\n                        MaterialAlertDialogBuilder builder = new MaterialAlertDialogBuilder(view.getContext());\r\n                        builder.setTitle(\"Finish Quiz...!\");\r\n                        builder.setMessage(\"Do you want to finish quiz?\");\r\n                        GlobalData.setQuizStatus(1);\r\n                        String label = \"Confirm\";\r\n\r\n\r\n\r\n\r\n                        builder.setPositiveButton(label, new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialogInterface, int i) {\r\n\r\n                                Intent intent;\r\n\r\n                                    intent = new Intent(view.getContext(), QuizResultActivity.class);\r\n                                    view.getContext().startActivity(intent);\r\n                                    ((Activity) view.getContext()).finish();\r\n\r\n                            }\r\n                        });\r\n\r\n                        builder.show();\r\n\r\n                        builder.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialogInterface, int i) {\r\n\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                });\r\n            }\r\n            holder.ans.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {\r\n                @Override\r\n                public void onCheckedChanged(RadioGroup radioGroup, int i) {\r\n                    //Log.e(\"selected\",String.valueOf(i-2131230795));\r\n                    int buttonId = radioGroup.getCheckedRadioButtonId();\r\n                    View radioButton = radioGroup.findViewById(buttonId);\r\n                    int index = radioGroup.indexOfChild(radioButton);\r\n                    Log.e(\"index\",String.valueOf(index));\r\n                    Question tmpQuestion = questions.get(position);\r\n                    tmpQuestion.setClientAns(index+1);\r\n                    questions.set(position, tmpQuestion);\r\n                    GlobalData.modifyClientQuestion(position, tmpQuestion);\r\n                    Log.e(\"correct\",String.valueOf(GlobalData.clientQuestions.get(position).getCorrectAns()));\r\n                    Log.e(\"client\",String.valueOf(GlobalData.clientQuestions.get(position).getClientAns()));\r\n                }\r\n            });\r\n\r\n\r\n        }\r\n\r\n        else{\r\n\r\n            holder.deleteQuestion.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    GlobalData.deleteQuestion(position);\r\n                    GlobalData.reduceIndex(position);\r\n\r\n                    Intent intent = new Intent(view.getContext(), CreateQuestionActivity.class);\r\n                    view.getContext().startActivity(intent);\r\n                    ((Activity) view.getContext()).finish();\r\n\r\n                }\r\n            });\r\n\r\n            holder.modifyQuestion.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    GlobalData.setModifiedQuestion(questions.get(position));\r\n                    GlobalData.deleteQuestion(position);\r\n                    GlobalData.reduceIndex(position);\r\n\r\n                    Intent intent = new Intent(view.getContext(), CreateQuestionActivity.class);\r\n                    view.getContext().startActivity(intent);\r\n                    ((Activity) view.getContext()).finish();\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return questions.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        public TextView questionNumber;\r\n        public TextView question;\r\n        public ImageView quizImage;\r\n        public RadioButton answer1;\r\n        public RadioButton answer2;\r\n        public RadioButton answer3;\r\n        public RadioButton answer4;\r\n        public RadioGroup ans;\r\n        public Button deleteQuestion;\r\n        public Button modifyQuestion;\r\n        public Button finishQuiz;\r\n\r\n        public ViewHolder(View itemView) {\r\n            super(itemView);\r\n\r\n            view = itemView;\r\n\r\n            this.questionNumber = itemView.findViewById(R.id.quizNum);\r\n            this.question = itemView.findViewById(R.id.singleQus);\r\n            this.quizImage = itemView.findViewById(R.id.quizImage);\r\n            this.ans = itemView.findViewById(R.id.mcq);\r\n\r\n            this.answer1 = itemView.findViewById(R.id.ans1);\r\n            this.answer2 = itemView.findViewById(R.id.ans2);\r\n            this.answer3 = itemView.findViewById(R.id.ans3);\r\n            this.answer4 = itemView.findViewById(R.id.ans4);\r\n\r\n            this.deleteQuestion = itemView.findViewById(R.id.delQus);\r\n            this.modifyQuestion = itemView.findViewById(R.id.modQus);\r\n\r\n            this.finishQuiz = itemView.findViewById(R.id.finishQuiz);\r\n\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/quizme/QuizListAdapter.java	(revision 79692ff92d16aca19e016372e7d04b3fdcbe85a2)
+++ app/src/main/java/com/example/quizme/QuizListAdapter.java	(date 1626868738177)
@@ -139,6 +139,7 @@
                     Log.e("index",String.valueOf(index));
                     Question tmpQuestion = questions.get(position);
                     tmpQuestion.setClientAns(index+1);
+                    Log.i("jhfgg",String.valueOf(index+1));
                     questions.set(position, tmpQuestion);
                     GlobalData.modifyClientQuestion(position, tmpQuestion);
                     Log.e("correct",String.valueOf(GlobalData.clientQuestions.get(position).getCorrectAns()));
Index: app/src/main/res/layout/past_question_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".PastQuizQuestionActivity\"\r\n    android:background=\"@color/colorPrimaryDark\">\r\n\r\n\r\n    <androidx.viewpager2.widget.ViewPager2\r\n        android:id=\"@+id/singleQ\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_centerVertical=\"true\"\r\n        tools:layout_editor_absoluteX=\"1dp\"\r\n        tools:layout_editor_absoluteY=\"1dp\">\r\n\r\n    </androidx.viewpager2.widget.ViewPager2>\r\n\r\n\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/past_question_activity.xml	(revision 79692ff92d16aca19e016372e7d04b3fdcbe85a2)
+++ app/src/main/res/layout/past_question_activity.xml	(date 1626864480556)
@@ -7,7 +7,16 @@
     android:orientation="vertical"
     tools:context=".PastQuizQuestionActivity"
     android:background="@color/colorPrimaryDark">
-
+    <TextView
+        android:id="@+id/blank_text"
+        android:layout_height="wrap_content"
+        android:layout_width="wrap_content"
+        android:layout_marginTop="30dp"
+        android:textSize="20sp"
+        android:textColor="@color/primaryTextColor"
+        android:layout_centerHorizontal="true"
+        android:text="This Quiz has no problems"
+        android:visibility="gone"/>
 
     <androidx.viewpager2.widget.ViewPager2
         android:id="@+id/singleQ"
Index: app/src/main/java/com/example/quizme/EditQuizActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quizme;\r\n\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.SharedPreferences;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Looper;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.quizme.utility.NetworkChangeListener;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport okhttp3.MediaType;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\npublic class EditQuizActivity extends AppCompatActivity {\r\n\r\n    EditText Qid,Qa1,Qa2,Qa3,Qa4;\r\n    RadioButton rdb1,rdb2,rdb3,rdb4;\r\n    TextView corrAns;\r\n    RadioGroup rg;\r\n    int newCorrAns;\r\n    LoadingDialog loadDialog;\r\n    String mongoId;\r\n    int Qnum;\r\n\r\n    private static final int PICK_IMAGE = 100;\r\n    //private  static  final  int PERMISSION_CODE = 1001;\r\n\r\n    NetworkChangeListener networkChangeListener = new NetworkChangeListener();\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        IntentFilter filter = new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION);\r\n        registerReceiver(networkChangeListener, filter);\r\n\r\n        super.onStart();\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        unregisterReceiver(networkChangeListener);\r\n\r\n        super.onStop();\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_edit_quiz);\r\n\r\n        Intent intent = getIntent();\r\n        String quiz= intent.getExtras().getString(\"quiz\",null);\r\n        Qnum = intent.getExtras().getInt(\"Qnum\",-1);\r\n        mongoId= intent.getExtras().getString(\"mongoId\",null);\r\n\r\n        JSONArray problems =  null;\r\n        JSONArray answers =  null;\r\n        int correctAns = 0;\r\n        String question=null,ans1=null,ans2=null,ans3=null,ans4=null;\r\n        try {\r\n            problems = new JSONArray(quiz);\r\n            question = problems.getJSONObject(Qnum).getString(\"question\");\r\n            answers = problems.getJSONObject(Qnum).getJSONArray(\"answers\");\r\n            correctAns = problems.getJSONObject(Qnum).getInt(\"correctAnswer\");\r\n            ans1 = answers.get(0).toString().trim();\r\n            ans2 = answers.get(1).toString().trim();\r\n            ans3 = answers.get(2).toString().trim();\r\n            ans4 = answers.get(3).toString().trim();\r\n\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        rg = (RadioGroup) findViewById(R.id.correctAnswerRadioGroup);\r\n        rdb1 = (RadioButton) findViewById(R.id.answer_radio1);\r\n        rdb2 = (RadioButton) findViewById(R.id.answer_radio2);\r\n        rdb3 = (RadioButton) findViewById(R.id.answer_radio3);\r\n        rdb4 = (RadioButton) findViewById(R.id.answer_radio4);\r\n        Qid = findViewById(R.id.qId);\r\n        Qa1 = findViewById(R.id.qA1);\r\n        Qa2 = findViewById(R.id.qA2);\r\n        Qa3 = findViewById(R.id.qA3);\r\n        Qa4 = findViewById(R.id.qA4);\r\n        corrAns = findViewById(R.id.text_correct_answer);\r\n        Qid.setText(question);\r\n        Qa1.setText(ans1);\r\n        Qa2.setText(ans2);\r\n        Qa3.setText(ans3);\r\n        Qa4.setText(ans4);\r\n\r\n        if(correctAns == 1){\r\n            rdb1.setChecked(true);\r\n            corrAns.setText(\"Correct Answer = 1\");\r\n        }\r\n        else if(correctAns == 2){\r\n            rdb2.setChecked(true);\r\n            corrAns.setText(\"Correct Answer = 2\");\r\n        } else if(correctAns == 3){\r\n            rdb3.setChecked(true);\r\n            corrAns.setText(\"Correct Answer = 3\");\r\n        }else if(correctAns == 4){\r\n            rdb4.setChecked(true);\r\n            corrAns.setText(\"Correct Answer = 4\");\r\n        }\r\n\r\n\r\n        //select new corrected answer\r\n        newCorrAns = correctAns;\r\n\r\n        rg.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener()\r\n        {\r\n            public void onCheckedChanged(RadioGroup group, int checkedId) {\r\n                switch(checkedId){\r\n                    case R.id.answer_radio1:\r\n                        rdb1.setChecked(true);\r\n                        newCorrAns = 1;\r\n                        corrAns.setText(\"Correct Answer = 1\");\r\n                        break;\r\n                    case R.id.answer_radio2:\r\n                        rdb2.setChecked(true);\r\n                        newCorrAns = 2;\r\n                        corrAns.setText(\"Correct Answer = 2\");\r\n                        break;\r\n                    case R.id.answer_radio3:\r\n                        rdb3.setChecked(true);\r\n                        newCorrAns = 3;\r\n                        corrAns.setText(\"Correct Answer = 3\");\r\n                        break;\r\n                    case R.id.answer_radio4:\r\n                        rdb4.setChecked(true);\r\n                        newCorrAns = 4;\r\n                        corrAns.setText(\"Correct Answer = 4\");\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    public void subEdit(View view) {\r\n\r\n        final String question = Qid.getText().toString().trim();\r\n        final String answer1 = Qa1.getText().toString().trim();\r\n        final String answer2 = Qa2.getText().toString().trim();\r\n        final String answer3 = Qa3.getText().toString().trim();\r\n        final String answer4 = Qa4.getText().toString().trim();\r\n        final int corrAnswer = newCorrAns;\r\n        Boolean check = true;\r\n\r\n        if(question.trim().length() == 0){\r\n            //questionTitle.requestFocus();\r\n            Qid.setError(\"Question name can not be empty\");\r\n            check =  false;\r\n        }\r\n        if(answer1.trim().length() == 0){\r\n            //ans1.requestFocus();\r\n            Qa1.setError(\"Answer1 can not be empty\");\r\n            check =  false;\r\n        }\r\n        if(answer2.trim().length() == 0){\r\n            //ans2.requestFocus();\r\n            Qa2.setError(\"Answer2 can not be empty\");\r\n            check =  false;\r\n        }\r\n        if(answer3.trim().length() == 0){\r\n            //ans3.requestFocus();\r\n            Qa3.setError(\"Answer3 can not be empty\");\r\n            check =  false;\r\n        }\r\n        if(answer4.trim().length() == 0){\r\n            // ans4.requestFocus();\r\n            Qa4.setError(\"Answer4 can not be empty\");\r\n            check =  false;\r\n        }\r\n\r\n        if(check) {\r\n\r\n            ArrayList answers = new ArrayList();\r\n            answers.add(answer1);\r\n            answers.add(answer2);\r\n            answers.add(answer3);\r\n            answers.add(answer4);\r\n\r\n\r\n            JSONObject data = new JSONObject();\r\n            JSONArray answerJson = new JSONArray(answers);\r\n\r\n            try {\r\n                data.put(\"question\", question);\r\n                data.put(\"answers\", answerJson);\r\n                data.put(\"correctAnswer\", corrAnswer);\r\n\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            loadDialog = new LoadingDialog(this);\r\n            loadDialog.startLoadingDialog();\r\n            WebRequest webReq = new WebRequest(this, loadDialog, data);\r\n            webReq.execute();\r\n        }\r\n\r\n    }\r\n\r\n    public void viewQuestions(View v){\r\n\r\n        Intent in = new Intent(this, EditQuestionActivity.class);\r\n        SharedPreferences pref = this.getSharedPreferences(\"MyPreferences\", Context.MODE_PRIVATE);\r\n        pref = this.getSharedPreferences(\"MyPreferences\", Context.MODE_PRIVATE);\r\n        int qId=pref.getInt(\"globalQuizID\",-1);\r\n        in.putExtra(\"quizID\",qId);\r\n        this.startActivity(in);\r\n\r\n    }\r\n\r\n    private class WebRequest extends AsyncTask<String,String,String> {\r\n\r\n        Context con;\r\n        LoadingDialog ld;\r\n        JSONObject data;\r\n\r\n        public WebRequest(Context con, LoadingDialog ld,JSONObject data){\r\n            this.con=con;\r\n            this.ld=ld;\r\n            this.data =  data;\r\n        }\r\n\r\n\r\n        @Override\r\n        protected String doInBackground(String... strings) {\r\n\r\n            OkHttpClient client = new OkHttpClient();\r\n            MediaType Json = MediaType.parse(\"application/json;charset=utf-8\");\r\n\r\n            RequestBody body = RequestBody.create(data.toString(), Json);\r\n\r\n\r\n            SharedPreferences pref = con.getSharedPreferences(\"MyPreferences\", Context.MODE_PRIVATE);\r\n            String jwt = pref.getString(\"jwt\", null);\r\n            final String token = \"Bearer \" + jwt;\r\n            String baseURL =pref.getString(\"baseURL\",null);\r\n            String index = String.valueOf(Qnum);\r\n            String url = baseURL + \"/quiz/update/problem?id=\"+mongoId +\"&index=\"+index ;\r\n            Request request = new Request.Builder().url(\r\n                    url\r\n            ).header(\"Authorization\", token).post(body).build();\r\n\r\n            Response response = null;\r\n            String responseBody = null;\r\n            JSONObject json = null;\r\n\r\n            try {\r\n                response = client.newCall(request).execute();\r\n                responseBody = response.body().string();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            if(response.code()==200) {\r\n\r\n                return responseBody;\r\n\r\n            }\r\n            //Log.i(\"response\",responseBody);\r\n            //Log.i(\"data\",data.toString());\r\n\r\n            return null;\r\n\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(String s) {\r\n            super.onPostExecute(s);\r\n            ld.dismissDialog();\r\n            if(s==null){\r\n                Toast toast=Toast.makeText(con, \"Something Went Wrong Try Again Later!\", Toast.LENGTH_SHORT);\r\n                toast.show();\r\n            }\r\n            else{\r\n                Toast toast=Toast.makeText(con, \"Question Successsfully Updated\", Toast.LENGTH_SHORT);\r\n                toast.show();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/quizme/EditQuizActivity.java	(revision 79692ff92d16aca19e016372e7d04b3fdcbe85a2)
+++ app/src/main/java/com/example/quizme/EditQuizActivity.java	(date 1626867972720)
@@ -81,7 +81,7 @@
         String quiz= intent.getExtras().getString("quiz",null);
         Qnum = intent.getExtras().getInt("Qnum",-1);
         mongoId= intent.getExtras().getString("mongoId",null);
-
+        Log.i("Qnumgo",String.valueOf(Qnum));
         JSONArray problems =  null;
         JSONArray answers =  null;
         int correctAns = 0;
